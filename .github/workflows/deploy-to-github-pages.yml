name: Deploy Combined Sites to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Build the portfolio site
      - name: Checkout Portfolio Source Repository
        uses: actions/checkout@v3
        with:
          path: portfolio-repo

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('portfolio-repo/**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Portfolio Dependencies
        working-directory: ./portfolio-repo
        run: pnpm install

      - name: Build Portfolio App
        working-directory: ./portfolio-repo
        run: pnpm run build # Assuming output goes to portfolio-repo/dist

      # Build the blog site
      - name: Checkout Blog Source Repository
        uses: actions/checkout@v3
        with:
          repository: hallucinogenizer/personal-tailwind-nextjs-blog
          ref: rohan
          path: blog-repo

      # Node.js is already set up, but ensure Yarn cache setup runs if needed
      - name: Setup Yarn Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn # Or adjust if yarn cache path differs
          key: ${{ runner.os }}-yarn-${{ hashFiles('blog-repo/**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Blog Dependencies
        working-directory: ./blog-repo
        run: yarn install

      - name: Build Blog
        working-directory: ./blog-repo
        run: yarn build # Assuming output goes to blog-repo/out

      # Prepare the combined output in a new directory
      - name: Prepare Combined Output
        run: |
          # Create a directory for the final deployment content
          mkdir deployment-output

          # Copy portfolio build output to root of the deployment directory
          echo "Copying portfolio from portfolio-repo/dist/ to deployment-output/"
          cp -r portfolio-repo/dist/* deployment-output/

          # Copy blog build output to blog subdirectory in the deployment directory
          echo "Creating blog directory and copying blog from blog-repo/out/ to deployment-output/blog/"
          mkdir -p deployment-output/blog
          cp -r blog-repo/out/* deployment-output/blog/

          echo "Contents of deployment-output:"
          ls -R deployment-output

      # Deploy using JamesIves action, pointing to the prepared directory
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: deployment-output # Deploy the contents of this directory
          repository-name: hallucinogenizer/hallucinogenizer.github.io
          branch: main # The branch to deploy to in the target repository
          token: ${{ secrets.DEPLOY_TOKEN }}
          clean: true # Optional: Recommended to remove existing files before deploying
          # Add these lines to provide committer info explicitly:
          git-config-name: "github-actions[bot]" # Or your preferred bot/user name
          git-config-email: "github-actions[bot]@users.noreply.github.com" # Or your preferred bot/user email
          # force: true # You had this, keep if needed but often not necessary unless overwriting history forcefully
          # attempt-limit: 3 # You had this, keep if needed for network issues
